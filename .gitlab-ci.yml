image:
  name: hashicorp/terraform:0.12.21
  entrypoint:
    - "/usr/bin/env"
    - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

stages:
  - Test and Lint
  - Build
  - Staging Plan
  - Staging Apply
  - Staging Deploy
  - Destroy

Test and Lint:
  image: docker:20.10.8
  services:
    - name: docker:dind
      command: ["--mtu=1300"]
  stage: Test and Lint
  script:
    - echo "Beware of Aug 11th"
  rules:
    - if: "$CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^(main|production)$/ || $CI_COMMIT_BRANCH =~ /^(main|production)$/"

Build:
  image: docker:20.10.8
  services:
    - name: docker:dind
      command: ["--mtu=1300"]
  stage: Build
  script:
    - apk add --update docker-compose
    - docker-compose run app  sh -c "rm -rf node_modules && npm install && npm run build"
  artifacts:
    paths:
      - app/out
  rules:
    - if: "$CI_COMMIT_BRANCH =~ /^(main|production)$/"


Validate Terraform:
  stage: Test and Lint
  script:
    - cd deploy/
    - terraform init -backend=false
    - terraform validate
    - terraform fmt -check
  rules:
    - if: "$CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^(main|production)$/ || $CI_COMMIT_BRANCH =~ /^(main|production)$/"

Staging Plan:
  stage: Staging Plan
  script:
    - cd deploy/
    - export TF_VAR_ecr_image_api=$ECR_REPO:$CI_COMMIT_SHORT_SHA
    - terraform init
    - terraform workspace select staging || terraform workspace new staging
    - terraform plan
  rules:
    - if: "$CI_COMMIT_BRANCH =~ /^(main|production)$/"

Staging Apply:
  stage: Staging Apply
  script:
    - cd deploy/
    - export TF_VAR_ecr_image_api=$ECR_REPO:$CI_COMMIT_SHORT_SHA
    - terraform init
    - terraform workspace select staging
    - terraform apply -auto-approve
  artifacts:
    paths:
      - deploy/staging
  rules:
    - if: "$CI_COMMIT_BRANCH =~ /^(main|production)$/"

Staging Deploy:
  image: docker:20.10.8
  stage: Staging Deploy
  script:
    - apk add --no-cache python3 py3-pip
    - pip install awscli
    - export bucket_name=`cat deploy/staging`
    - cd app/out/
    - aws s3 sync . s3://$bucket_name
  rules:
    - if: "$CI_COMMIT_BRANCH =~ /^(main|production)$/"


Staging Destroy:
  stage: Destroy
  script:
    - cd deploy/
    - terraform init
    - terraform workspace select staging
    - terraform destroy -auto-approve
  rules:
    - if: "$CI_COMMIT_BRANCH =~ /^(main|production)$/"
      when: manual